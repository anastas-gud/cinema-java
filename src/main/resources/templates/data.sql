create table hall_seats (
    id int primary key generated by default as identity,
    hall_id int references halls(id),
    row int,
    seat int
);

create table film_session(
    id int primary key generated by default as identity,
    film_id int not null references films(id),
    start_date date,
    start_time time,
    price numeric,
    hall_id int references halls(id)
);

alter table film_sessions_seats drop constraint film_sessions_seats_film_session_id_fkey;
alter table film_sessions_seats add constraint
    film_sessions_seats_film_session_id_fkey foreign key (film_session_id) references film_sessions(id) on DELETE cascade;



create table film_sessions_seats(
    id int primary key generated by default as identity,
    film_session_id int not null references film_sessions(id),
    seat_id int not null references hall_seats(id),
    is_booked boolean not null default false
);

create table orders_seats(
    order_id int not null references orders(id),
    film_session_seat_id  int not null references film_sessions_seats(id),
    primary key (order_id, film_session_seat_id)
);

create table orders(
    id int primary key generated by default as identity,
    user_id int not null references users(id),
    date date,
    time time,
    film_session_id int references film_sessions(id)
);

drop table orders_seats;

create table cards(
    id int primary key generated by default as identity,
    image varchar,
    cashback int not null ,
    sum_from numeric not null ,
    status varchar not null
);

alter table users add column card_id int references cards(id) default 1;
alter table users add column bonuses numeric not null default 0;
alter table users drop column login;
alter table users add column login varchar unique;

insert into cards(image, cashback, sum_from, status)
values ('pinkCard.jpg', 5, 0, 'ЗРИТЕЛЬ');
insert into cards(image, cashback, sum_from, status)
values ('orangeCard.jpg', 10, 5000, 'КИНОЛЮБИТЕЛЬ');
insert into cards(image, cashback, sum_from, status)
values ('redCard.jpg', 20, 15000, 'КИНОМАН');

select * from orders_seats;

alter table film_sessions add column hall_id int references halls(id);
alter table orders add column film_session_id int references film_sessions(id);
alter table users add column total_sum numeric default 0;
alter table films add column is_deleted boolean default false;
alter table cinema add column is_deleted boolean default false;
alter table hall_seats add column is_exist boolean default true;
alter table halls add column is_deleted boolean default false;

CREATE UNIQUE INDEX row_seat ON hall_seats (hall_id, row, seat);

drop table hall_seats;
select * from hall_seats;

INSERT INTO hall_seats (hall_id, row, seat)
SELECT 9, 12, gs FROM generate_series(1, 16) AS gs;

delete from hall_seats where hall_id=10;

truncate table film_sessions_seats cascade ;

--[1,10][12,61] ===== 1 hall
--[63, 158] ========= 2 hall
--[159, 350] ======== 3 hall
--[351, 410] ======== 4 hall
--[411, 470] ======== 5 hall
--[491, 586] ======== 6 hall
--[587, 658][660, 683] ======== 7 hall
--[684, 875] ======== 8 hall
--[876, 1067] ======= 9 hall
INSERT INTO film_sessions_seats (film_session_id, seat_id)
SELECT 13, gs FROM generate_series(63, 158) AS gs;

select distinct f.*
from films f
         join film_sessions fs on f.id = fs.film_id
    and fs.start_date = :startDate
    and fs.start_time >= :startTime
    and f.is_deleted = false
    and current_date between f.start_rental and f.end_rental